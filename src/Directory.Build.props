<Project>
  <Import Project="..\Directory.Build.props" />

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <IsPackable Condition=" '$(IsCoreProject)' ">!$(DisableCorePublish)</IsPackable>
    <IsPackable Condition=" '$(IsWpfProject)' ">!$(DisableWpfPublish)</IsPackable>
    <IsPackable Condition=" '$(IsFormsProject)' ">!$(DisableFormsPublish)</IsPackable>
    <IsPackable Condition=" '$(IsUnoProject)' ">!$(DisableUnoPublish)</IsPackable>
    <ContinuousIntegrationBuild Condition="'$(BUILD_BUILDID)' != ''">true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <PropertyGroup>
    <UnoWinUILibraryTargets>netstandard2.0;monoandroid12.0;monoandroid13.0;xamarinios10;xamarinmac20;net6.0-android31;net6.0-ios14.0;net6.0-maccatalyst15.0;net6.0-macos10.14</UnoWinUILibraryTargets>
    <UnoWinUILibraryTargets Condition=" $([MSBuild]::IsOSPlatform('windows')) ">$(UnoWinUILibraryTargets);net6.0-windows10.0.18362</UnoWinUILibraryTargets>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>$(IsPackable)</GeneratePackageOnBuild>
  </PropertyGroup>

  <Choose>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
      <PropertyGroup>
        <RuntimeIdentifier >iossimulator-x64</RuntimeIdentifier>
        <SupportedOSPlatformVersion>10.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion>10.0</TargetPlatformMinVersion>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">
      <PropertyGroup>
        <RuntimeIdentifier>maccatalyst-x64</RuntimeIdentifier>
        <SupportedOSPlatformVersion>13.1</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion>13.1</TargetPlatformMinVersion>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos'">
      <PropertyGroup>
        <RuntimeIdentifier>osx-x64</RuntimeIdentifier>
        <SupportedOSPlatformVersion>10.14</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion>10.14</TargetPlatformMinVersion>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
      <PropertyGroup>
        <SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion>21.0</TargetPlatformMinVersion>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
      <PropertyGroup>
        <SupportedOSPlatformVersion>10.0.18362.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion>10.0.18362.0</TargetPlatformMinVersion>
      </PropertyGroup>
    </When>
  </Choose>

  <ItemGroup Condition=" $(IsPackable) ">
    <None Include="$(PrismPackageIcon)"
          Visible="False"
          Pack="True"
          PackagePath="" />
    <None Include="$(PrismLicenseFile)"
          Visible="False"
          Pack="True"
          PackagePath="" />
    <SourceRoot Include="$(NuGetPackageRoot)"
                Condition="'$(NuGetPackageRoot)' != ''" />
  </ItemGroup>

  <!--
  Adjust the output paths for runtime project in order for those
  projects to stay in the same folder as the original reference one.
  -->
  <PropertyGroup>
    <_AdjustedOutputProjects>$(_AdjustedOutputProjects);Prism.Uno.csproj</_AdjustedOutputProjects>
    <_AdjustedOutputProjects>$(_AdjustedOutputProjects);Prism.Uno.WinUI.csproj</_AdjustedOutputProjects>
    <_AdjustedOutputProjects>$(_AdjustedOutputProjects);Prism.DryIoc.Uno.csproj</_AdjustedOutputProjects>
    <_AdjustedOutputProjects>$(_AdjustedOutputProjects);Prism.DryIoc.Uno.WinUI.csproj</_AdjustedOutputProjects>
    <_AdjustedOutputProjects>$(_AdjustedOutputProjects);Prism.Unity.Uno.csproj</_AdjustedOutputProjects>
    <_AdjustedOutputProjects>$(_AdjustedOutputProjects);Prism.Unity.Uno.WinUI.csproj</_AdjustedOutputProjects>
  </PropertyGroup>

  <PropertyGroup Condition="$(_AdjustedOutputProjects.Contains('$(MSBuildProjectFile)'))">
    <BaseOutputPath>bin\$(MSBuildProjectName)</BaseOutputPath>
    <BaseIntermediateOutputPath>obj\$(MSBuildProjectName)</BaseIntermediateOutputPath>
    <DefaultItemExcludes>$(DefaultItemExcludes);obj/**;bin/**</DefaultItemExcludes>
  </PropertyGroup>
</Project>
